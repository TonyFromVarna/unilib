// ============================================================================
// catalina.corepolicy - Security Policy Permissions for Tomcat 5
//
// This file contains a default set of security policies to be enforced (by the
// JVM) when Catalina is executed with the "-security" option.  In addition
// to the permissions granted here, the following additional permissions are
// granted to the codebase specific to each web application:
//
// * Read access to the document root directory
//
// $Id: catalina.policy 543026 2007-05-31 02:44:55Z markt $
// ============================================================================


// ========== SYSTEM CODE PERMISSIONS =========================================


// These permissions apply to javac
grant codeBase "file:${java.home}/lib/-" {
        permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions
grant codeBase "file:${java.home}/jre/lib/ext/-" {
        permission java.security.AllPermission;
};

// These permissions apply to javac when ${java.home] points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/../lib/-" {
        permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions when
// ${java.home} points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/lib/ext/-" {
        permission java.security.AllPermission;
};


// ========== CATALINA CODE PERMISSIONS =======================================


// These permissions apply to the daemon code
grant codeBase "file:${catalina.home}/bin/commons-daemon.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the logging API
grant codeBase "file:${catalina.home}/bin/tomcat-juli.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the server startup code
grant codeBase "file:${catalina.home}/bin/bootstrap.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the servlet API classes
// and those that are shared across all class loaders
// located in the "lib" directory
grant codeBase "file:${catalina.home}/lib/-" {
        permission java.security.AllPermission;
};


// ========== WEB APPLICATION PERMISSIONS =====================================


// These permissions are granted by default to all web applications
// In addition, a web application will be given a read FilePermission
// and JndiPermission for all files and directories in its document root.
grant { 
    // Required for JNDI lookup of named JDBC DataSource's and
    // javamail named MimePart DataSource used to send mail
    permission java.util.PropertyPermission "java.home", "read";
    permission java.util.PropertyPermission "java.naming.*", "read";
    permission java.util.PropertyPermission "javax.sql.*", "read";

    // OS Specific properties to allow read access
    permission java.util.PropertyPermission "os.name", "read";
    permission java.util.PropertyPermission "os.version", "read";
    permission java.util.PropertyPermission "os.arch", "read";
    permission java.util.PropertyPermission "file.separator", "read";
    permission java.util.PropertyPermission "path.separator", "read";
    permission java.util.PropertyPermission "line.separator", "read";

    // JVM properties to allow read access
    permission java.util.PropertyPermission "java.version", "read";
    permission java.util.PropertyPermission "java.vendor", "read";
    permission java.util.PropertyPermission "java.vendor.url", "read";
    permission java.util.PropertyPermission "java.class.version", "read";
    permission java.util.PropertyPermission "java.specification.version", "read";
    permission java.util.PropertyPermission "java.specification.vendor", "read";
    permission java.util.PropertyPermission "java.specification.name", "read";

    permission java.util.PropertyPermission "java.vm.specification.version", "read";
    permission java.util.PropertyPermission "java.vm.specification.vendor", "read";
    permission java.util.PropertyPermission "java.vm.specification.name", "read";
    permission java.util.PropertyPermission "java.vm.version", "read";
    permission java.util.PropertyPermission "java.vm.vendor", "read";
    permission java.util.PropertyPermission "java.vm.name", "read";

    // Required for OpenJMX
    permission java.lang.RuntimePermission "getAttribute";

    // Allow read of JAXP compliant XML parser debug
    permission java.util.PropertyPermission "jaxp.debug", "read";

    // Precompiled JSPs need access to this package.
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime";
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime.*";
    
    // Precompiled JSPs need access to this system property.
    permission java.util.PropertyPermission "org.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER", "read";

    // Permitions for Files in /tomcat/webapps/examples/
    permission java.io.FilePermission  "${tomcat.home}/webapps/examples/WEB-INF/classes/-","read,write,delete,execute";
    permission java.io.FilePermission  "${tomcat.home}/webapps/examples/jsp/-","read,write,delete,execute";
    permission java.io.FilePermission  "${tomcat.home}/lib/*","read,write,delete,execute";

    // SocketPermission anywhere
    permission java.net.SocketPermission "*:1024-", "accept,listen,connect,resolve";    
    permission java.net.SocketPermission "*:80", "accept,listen,connect,resolve";
    permission java.net.SocketPermission "*:443", "accept,listen,connect,resolve";

    permission java.lang.RuntimePermission "setFactory";        

    permission java.lang.RuntimePermission "setContextClassLoader";

    permission java.lang.RuntimePermission "createSecurityManager";

    permission java.lang.RuntimePermission "setSecurityManager";

    permission java.util.PropertyPermission "*", "read, write";                           

};


  grant codeBase "file:${catalina.home}/webapps/examples/jsp/-" {
       // Tomcat has to be able to use its port on the any host/localhost
        permission java.net.SocketPermission "*:1024-","accept,listen,connect,resolve";
        permission java.net.SocketPermission "*:80","accept,listen,connect,resolve"; 
        permission java.lang.RuntimePermission "createSecurityManager";
        permission java.util.PropertyPermission "*","read,write";
   };


   grant codeBase "file:${catalina.home}/webapps/examples/WEB-INF/classes/-" {
        permission java.net.SocketPermission "*:1024-","accept,listen,connect,resolve";
        permission java.net.SocketPermission "*:80","accept,listen,connect,resolve";
        permission java.util.PropertyPermission "*","read,write";
        permission java.lang.RuntimePermission "createSecurityManager";
        permission java.lang.RuntimePermission "setSecurityManager";
   };        
   
   grant codeBase "file:${catalina.home}/webapps/examples/WEB-INF/classes/-" {
        permission java.net.SocketPermission "*:1024-","accept,listen,connect,resolve";
        permission java.net.SocketPermission "*:80","accept,listen,connect,resolve";
        permission java.util.PropertyPermission "*","read,write";
        permission java.lang.RuntimePermission "createSecurityManager";
        permission java.lang.RuntimePermission "setSecurityManager";
   };

   grant codeBase "file:${catalina.home}/lib/-" {
           permission java.net.SocketPermission "*:1024-","accept,listen,connect,resolve";
           permission java.net.SocketPermission "*:80","accept,listen,connect,resolve";
   };

   grant codeBase "file:${catalina.home}/webapps/examples/WEB-INF/classes/-" {
           permission java.net.SocketPermission "*:1024-","accept,listen,connect,resolve";
           permission java.net.SocketPermission "*:80","accept,listen,connect,resolve";
   };


  grant {
    permission java.lang.RuntimePermission "setContextClassLoader"; 
    permission java.net.SocketPermission "*:1024-","accept, connect, listen, resolve";
    permission java.net.SocketPermission "*:80","accept, connect, listen, resolve";
    permission java.io.FilePermission "/home/-","read, write, delete, execute";
    permission java.util.PropertyPermission "*", "read, write";
};

